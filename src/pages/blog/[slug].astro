---
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("blog", ({ data }) => {
    return !data.draft; // Only generate pages for non-draft posts
  });

  return posts.map((post) => {
    return {
      params: { slug: post.slug },
      props: { post },
    };
  });
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout title={post.data.title}>
  <Container>
    <div class="py-10">
      <article class="max-w-3xl mx-auto">
        <header class="mb-8">
          <h1 class="text-4xl font-bold text-gray-800 mb-4">
            {post.data.title}
          </h1>
          <div class="flex items-center gap-4 text-gray-600 mb-6">
            <span
              >{
                post.data.publishDate.toLocaleDateString("en-GB", {
                  day: "numeric",
                  month: "long",
                  year: "numeric",
                })
              }</span
            >
            <span>•</span>
            <span>{post.data.author}</span>
            {
              post.data.category && (
                <>
                  <span>•</span>
                  <span class="bg-primary/10 text-primary px-2 py-1 rounded-full text-sm">
                    {post.data.category}
                  </span>
                </>
              )
            }
          </div>
          {
            post.data.snippet && (
              <p class="text-lg text-gray-600 italic">{post.data.snippet}</p>
            )
          }
        </header>

        <div class="prose prose-lg max-w-none">
          <Content />
        </div>

        {
          post.data.tags && post.data.tags.length > 0 && (
            <div class="mt-8 pt-6 border-t border-gray-200">
              <h3 class="text-sm font-semibold text-gray-700 mb-2">Tags:</h3>
              <div class="flex flex-wrap gap-2">
                {post.data.tags.map((tag) => (
                  <span class="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm">
                    {tag}
                  </span>
                ))}
              </div>
            </div>
          )
        }
      </article>
    </div>
  </Container>
</Layout>

<style>
  .prose {
    color: #374151;
  }

  .prose h1 {
    color: #111827;
    font-size: 2.25rem;
    font-weight: 700;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  .prose h2 {
    color: #111827;
    font-size: 1.875rem;
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }

  .prose h3 {
    color: #111827;
    font-size: 1.5rem;
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }

  .prose p {
    margin-bottom: 1rem;
    line-height: 1.75;
  }

  .prose ul {
    margin-bottom: 1rem;
    padding-left: 1.5rem;
  }

  .prose li {
    margin-bottom: 0.5rem;
  }

  .prose strong {
    font-weight: 600;
    color: #111827;
  }

  .prose em {
    font-style: italic;
  }
</style>

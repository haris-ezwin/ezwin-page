---
import Container from "@components/container.astro";
import Link from "@components/ui/link.astro";
import Dropdown from "./dropdown.astro";
import { Astronav, MenuItems, MenuIcon } from "astro-navbar";
import { getCurrentOffer } from "@utils/offer.js";

const menuitems = [
  {
    title: "Free Lessons",
    path: "#",
    children: [
      { title: "Primary 4 Maths", path: "/resources/p4-math" },
      { title: "Primary 5 Maths", path: "/resources/p5-math" },
      { title: "Primary 6 PSLE Maths", path: "/resources/p6-psle-math" },
    ],
  },
  {
    title: "About",
    path: "/about",
  },
  {
    title: "Blog",
    path: "/blog",
  },
];

const activeOffers = getCurrentOffer();

const currentDate = new Date();
const currentMonth = currentDate.getMonth() + 1; // Get current month (1-12)
let monthsOffer = 0;

if (currentMonth === 3) {
  monthsOffer = 3;
} else if (currentMonth === 4) {
  monthsOffer = 2;
} else if (currentMonth === 5) {
  monthsOffer = 1;
}

// Calculate days remaining until March 15, 2025
const endDate = new Date(2025, 2, 15); // Month is 0-indexed, so 2 = March
const timeDiff = endDate.getTime() - currentDate.getTime();
const daysRemaining = Math.ceil(timeDiff / (1000 * 3600 * 24));
const showOffer = daysRemaining > 0;
---

<div class="sticky top-0 z-40 bg-background">
  <Container>
    <header class="flex flex-col lg:flex-row justify-between items-center py-5">
      <Astronav>
        <div class="flex w-full lg:w-auto items-center justify-between">
          <a href="/" class="flex items-center gap-2 text-lg">
            <img src="/ezwin-logo.svg" alt="EzWin Logo" class="w-8 h-8" />
            <div>
              <span class="font-bold text-slate-800">EzWin</span><span
                class="text-slate-500">Academy</span
              >
            </div>
          </a>
          <div class="block lg:hidden">
            <MenuIcon class="w-4 h-4 text-gray-800" />
          </div>
        </div>
        <MenuItems class="hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0">
          <ul class="flex flex-col lg:flex-row lg:gap-3">
            {
              menuitems.map((item, index) => (
                <>
                  {item.children && (
                    <Dropdown
                      title={item.title}
                      children={item.children}
                      lastItem={index === menuitems.length - 1}
                    />
                  )}

                  {!item.children && (
                    <li>
                      <a
                        href={item.path}
                        class="flex lg:px-3 py-2 items-center text-gray-600 hover:text-gray-900">
                        <span> {item.title}</span>
                      </a>
                    </li>
                  )}
                </>
              ))
            }
          </ul>
        </MenuItems>
      </Astronav>
      <div>
        <div class="hidden lg:flex items-center gap-4">
          <a
            href="#contact-form"
            class="inline-flex items-center justify-center rounded-full bg-primary px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-primary/80 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary">
            Book Free Trial
          </a>
        </div>
      </div>
    </header>
  </Container>
</div>

<!-- Floating Action Button for Mobile -->
<div class="fixed bottom-6 right-6 lg:hidden z-50">
  <a
    href="#contact-form"
    class="inline-flex items-center justify-center rounded-full bg-primary px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-primary/80 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary">
    Book Free Trial
  </a>
</div>

<style>
  .announcement-offer {
    transition:
      transform 0.3s ease-in-out,
      opacity 0.3s ease-in-out;
  }
  .announcement-offer.active {
    transform: translateX(0);
    opacity: 1;
  }
  .announcement-offer.prev {
    transform: translateX(-100%);
    opacity: 0;
  }
  .announcement-offer.next {
    transform: translateX(100%);
    opacity: 0;
  }
</style>

<script>
  // Function to rotate through offers with animation
  function rotateOffers() {
    const offers = document.querySelectorAll(".announcement-offer");
    if (offers.length <= 0) return;

    // Show the first offer initially
    offers[0].classList.add("active");

    let currentIndex = 0;

    // Only set up rotation if there's more than one offer
    if (offers.length > 1) {
      setInterval(() => {
        // Mark current offer as moving left (prev)
        offers[currentIndex].classList.remove("active");
        offers[currentIndex].classList.add("prev");

        // Calculate next index
        const nextIndex = (currentIndex + 1) % offers.length;

        // Prepare next offer to slide in from right
        offers[nextIndex].classList.remove("prev");
        offers[nextIndex].classList.add("next");

        // Trigger reflow to ensure transitions work
        void offers[nextIndex].offsetHeight;

        // Slide in the next offer
        offers[nextIndex].classList.remove("next");
        offers[nextIndex].classList.add("active");

        // After animation completes, clean up previous offer
        setTimeout(() => {
          offers[currentIndex].classList.remove("prev");
          currentIndex = nextIndex;
        }, 300);
      }, 5000); // 5 seconds per offer
    }
  }
</script>

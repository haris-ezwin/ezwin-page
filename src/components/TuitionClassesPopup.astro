---
import { primarySchools } from "@utils/school.js";
---

<div
  id="tuition-classes-popup"
  class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
  <div class="bg-white rounded-lg shadow-xl max-w-md w-full p-6 relative">
    <!-- Close Button -->
    <button
      class="absolute top-4 right-4 text-gray-400 hover:text-gray-600"
      onclick="document.getElementById('tuition-classes-popup').classList.add('hidden'); document.getElementById('tuition-classes-popup').classList.remove('flex');">
      <svg
        class="w-6 h-6"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <!-- Form Header -->
    <div class="mb-6" id="tuition-form-header">
      <h2 class="text-2xl font-bold text-gray-900 mb-2">
        Get 1 Month Free Tuition Classes
      </h2>
      <p class="text-gray-600 text-sm">
        Fill in your details and we'll get in touch with you!
      </p>
    </div>

    <!-- Success Message (hidden by default) -->
    <div class="hidden text-center py-8" id="tuition-success-message">
      <div class="mb-4">
        <svg class="w-16 h-16 text-green-500 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </div>
      <h3 class="text-2xl font-bold text-gray-900 mb-3">Thank You!</h3>
      <p class="text-gray-600 text-base">
        We will contact you shortly to arrange your free tuition classes.
      </p>
    </div>

    <!-- Form -->
    <form class="space-y-4" id="tuition-classes-form">
      <div>
        <label
          for="parent-first-name"
          class="block text-sm font-medium text-gray-700 mb-1">
          Parent First Name
        </label>
        <input
          type="text"
          id="parent-first-name"
          name="parentFirstName"
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
          placeholder="Parent's first name"
        />
      </div>

      <div>
        <label
          for="parent-phone"
          class="block text-sm font-medium text-gray-700 mb-1">
          Parent Phone Number *
        </label>
        <input
          type="tel"
          id="parent-phone"
          name="parentPhone"
          required
          pattern="[0-9]{8}"
          title="Please enter a valid SG number with 8 digits"
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
          placeholder="88889999"
        />
      </div>

      <div>
        <label
          for="student-first-name"
          class="block text-sm font-medium text-gray-700 mb-1">
          Student First Name *
        </label>
        <input
          type="text"
          id="student-first-name"
          name="studentFirstName"
          required
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
          placeholder="Student's first name"
        />
      </div>

      <div>
        <label
          for="levels"
          class="block text-sm font-medium text-gray-700 mb-1">
          Levels *
        </label>
        <select
          id="levels"
          name="levels"
          required
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent bg-white">
          <option value="">Select level</option>
          <option value="Primary 4">Primary 4</option>
          <option value="Primary 5">Primary 5</option>
          <option value="Primary 6">Primary 6</option>
        </select>
      </div>

      <div>
        <label
          for="parent-email"
          class="block text-sm font-medium text-gray-700 mb-1">
          Parent Email *
        </label>
        <input
          type="email"
          id="parent-email"
          name="parentEmail"
          required
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
          placeholder="parent@email.com"
        />
      </div>

      <div>
        <label
          for="school-name"
          class="block text-sm font-medium text-gray-700 mb-1">
          Full School Name
        </label>
        <div class="relative">
          <input
            type="text"
            id="school-name"
            name="schoolName"
            autocomplete="off"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
            placeholder="Search for a school..."
          />
          <div
            id="school-dropdown"
            class="absolute z-10 w-full bg-white border border-gray-300 rounded-lg mt-1 max-h-60 overflow-y-auto hidden shadow-lg">
            {primarySchools.map((school) => (
              <div
                class="school-option px-4 py-2 hover:bg-gray-100 cursor-pointer"
                data-school={school}>
                {school}
              </div>
            ))}
          </div>
        </div>
      </div>

      <button
        type="submit"
        class="w-full bg-primary text-white py-3 rounded-lg font-semibold hover:bg-blue-800 transition-colors duration-200">
        Submit
      </button>
    </form>
  </div>
</div>

<script>
  // Open popup function
  window.openTuitionClassesPopup = function () {
    document.getElementById("tuition-classes-popup").classList.remove("hidden");
    document.getElementById("tuition-classes-popup").classList.add("flex");
  };

  // Check URL parameters on page load
  document.addEventListener("DOMContentLoaded", function () {
    const urlParams = new URLSearchParams(window.location.search);
    const openParam = urlParams.get("open");

    if (openParam === "tuition") {
      window.openTuitionClassesPopup();
    }
  });

  // Close on outside click
  document
    .getElementById("tuition-classes-popup")
    .addEventListener("click", function (e) {
      if (e.target === this) {
        this.classList.add("hidden");
        this.classList.remove("flex");
      }
    });

  // School dropdown search functionality
  const schoolInput = document.getElementById("school-name") as HTMLInputElement;
  const schoolDropdown = document.getElementById("school-dropdown");
  const schoolOptions = document.querySelectorAll(".school-option");

  if (schoolInput && schoolDropdown) {
    // Show dropdown when input is focused
    schoolInput.addEventListener("focus", function () {
      schoolDropdown.classList.remove("hidden");
    });

    // Filter schools as user types
    schoolInput.addEventListener("input", function () {
      const searchTerm = this.value.toLowerCase();
      let hasVisibleOptions = false;

      schoolOptions.forEach((option) => {
        const schoolName = option.getAttribute("data-school")?.toLowerCase() || "";
        if (schoolName.includes(searchTerm)) {
          (option as HTMLElement).style.display = "block";
          hasVisibleOptions = true;
        } else {
          (option as HTMLElement).style.display = "none";
        }
      });

      // Show/hide dropdown based on whether there are visible options
      if (hasVisibleOptions && this.value.length > 0) {
        schoolDropdown.classList.remove("hidden");
      } else if (this.value.length === 0) {
        schoolDropdown.classList.remove("hidden");
        // Show all options when input is empty
        schoolOptions.forEach((option) => {
          (option as HTMLElement).style.display = "block";
        });
      } else {
        schoolDropdown.classList.add("hidden");
      }
    });

    // Select school when clicked
    schoolOptions.forEach((option) => {
      option.addEventListener("click", function () {
        const schoolName = this.getAttribute("data-school") || "";
        schoolInput.value = schoolName;
        schoolDropdown.classList.add("hidden");
      });
    });

    // Close dropdown when clicking outside
    document.addEventListener("click", function (e) {
      if (!schoolInput.contains(e.target as Node) && !schoolDropdown.contains(e.target as Node)) {
        schoolDropdown.classList.add("hidden");
      }
    });
  }

  // Handle form submission
  const tuitionForm = document.getElementById("tuition-classes-form") as HTMLFormElement;
  if (tuitionForm) {
    tuitionForm.addEventListener("submit", async function (e) {
      e.preventDefault();
      console.log("Form submitted");

      const formData = new FormData(this);
      const data = {
        ...Object.fromEntries(formData),
        tag: "free-1-month-tuition",
      };

      try {
        // Determine webhook URL based on environment
        const isLocalhost = window.location.hostname === "localhost" || window.location.hostname === "127.0.0.1";
        const webhookUrl = isLocalhost
          ? "https://n8n.ezwin.academy/webhook-test/cb40cc05-3519-4f51-b771-e8de61012b47"
          : "https://n8n.ezwin.academy/webhook/cb40cc05-3519-4f51-b771-e8de61012b47";

        // Send data to webhook
        await fetch(webhookUrl, {
          method: "POST",
          mode: "no-cors",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        // With no-cors mode, we can't read the response, but the request is sent
        // Hide form and header, show success message
        const formHeader = document.getElementById("tuition-form-header");
        const successMessage = document.getElementById("tuition-success-message");
        const form = document.getElementById("tuition-classes-form");

        if (formHeader) formHeader.classList.add("hidden");
        if (form) form.classList.add("hidden");
        if (successMessage) successMessage.classList.remove("hidden");

        // Reset form
        this.reset();

        // Auto-close popup after 3 seconds
        setTimeout(() => {
          document.getElementById("tuition-classes-popup")?.classList.add("hidden");
          document.getElementById("tuition-classes-popup")?.classList.remove("flex");

          // Reset UI for next time
          if (formHeader) formHeader.classList.remove("hidden");
          if (form) form.classList.remove("hidden");
          if (successMessage) successMessage.classList.add("hidden");
        }, 3000);
      } catch (error) {
        console.error("Error submitting form:", error);
        alert("There was an error submitting your request. Please try again.");
      }
    });
  }
</script>
